searchState.loadedDescShard("rpgmv_tool", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtracts the map number from a file name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this is a dir.\nTry to extract a file kind from a path.\nTry to create a dir.\nA command\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet this from a u8.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet this from a u8.\nCalls <code>U::from(self)</code>.\nI think this is an end for an IF_WIN, IF_ESCAPE, or …\nI think this is an end for the CONDITONAL_BRANCH block. I …\nA command code\nThis has no implementation.\nThis is an end for the LOOP command. In contrast with the …\nThis is likely related to move routes somehow, like how …\nI think this is an end for the WHEN block. I can’t be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe type of actor check\nThe type of enemy check\nThe type of gold check\nThe type of variable compare operation\n==\n=\n&lt;\n&lt;=\n!=\nGet this as a string.\nGet this as a str.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet this from a u8.\nGet this from a u8.\nGet this from a u8.\nGet this from a u8.\nGet this from a u8.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n+=\n/=\n%=\n*=\nThe type of variable operation.\n=\n-=\nGet this as a str.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet this from a u8.\nGet this from a u8.\nGet this from a u8.\nGet this from a u8.\nGet this from a u8.\nGet this from a u8.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfig\nActors\nArmors\nClasses\nCommon Events\nReturns the argument unchanged.\nLoad this from a path.\nGet an actor name\nGet an armor name\nGet a class name\nGet a common event name\nGet an item name\nGet a skill name\nGet a state name\nGet a switch name\nGet a troop name\nGet a variable name\nCalls <code>U::from(self)</code>.\nItems\nSkills\nStates\nSwitches\nTroops\nVariables\nA destination for bytes.\nFinish using this file sink, writing the result.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMake a new <code>FileSink</code>.\nCreate a new empty variant.\nCreate a new file variant.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInterface inspired by mv. See: …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTry to get metadata for a path\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")